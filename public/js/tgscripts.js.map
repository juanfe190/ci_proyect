{"version":3,"sources":["app.js"],"names":[],"mappingsfile":"tgscripts.js","sourcesContent":["/**\nCore script to handle the entire theme and core functions\n**/\nvar App = function() {\n\n    // IE mode\n    var isRTL = false;\n    var isIE8 = false;\n    var isIE9 = false;\n    var isIE10 = false;\n\n    var resizeHandlers = [];\n\n    var assetsPath = '../assets/';\n\n    var globalImgPath = 'global/img/';\n\n    var globalPluginsPath = 'global/plugins/';\n\n    var globalCssPath = 'global/css/';\n\n    // theme layout color set\n\n    var brandColors = {\n        'blue': '#89C4F4',\n        'red': '#F3565D',\n        'green': '#1bbc9b',\n        'purple': '#9b59b6',\n        'grey': '#95a5a6',\n        'yellow': '#F8CB00'\n    };\n\n    // initializes main settings\n    var handleInit = function() {\n\n        if ($('body').css('direction') === 'rtl') {\n            isRTL = true;\n        }\n\n        isIE8 = !!navigator.userAgent.match(/MSIE 8.0/);\n        isIE9 = !!navigator.userAgent.match(/MSIE 9.0/);\n        isIE10 = !!navigator.userAgent.match(/MSIE 10.0/);\n\n        if (isIE10) {\n            $('html').addClass('ie10'); // detect IE10 version\n        }\n\n        if (isIE10 || isIE9 || isIE8) {\n            $('html').addClass('ie'); // detect IE10 version\n        }\n    };\n\n    // runs callback functions set by App.addResponsiveHandler().\n    var _runResizeHandlers = function() {\n        // reinitialize other subscribed elements\n        for (var i = 0; i < resizeHandlers.length; i++) {\n            var each = resizeHandlers[i];\n            each.call();\n        }\n    };\n\n    // handle the layout reinitialization on window resize\n    var handleOnResize = function() {\n        var resize;\n        if (isIE8) {\n            var currheight;\n            $(window).resize(function() {\n                if (currheight == document.documentElement.clientHeight) {\n                    return; //quite event since only body resized not window.\n                }\n                if (resize) {\n                    clearTimeout(resize);\n                }\n                resize = setTimeout(function() {\n                    _runResizeHandlers();\n                }, 50); // wait 50ms until window resize finishes.                \n                currheight = document.documentElement.clientHeight; // store last body client height\n            });\n        } else {\n            $(window).resize(function() {\n                if (resize) {\n                    clearTimeout(resize);\n                }\n                resize = setTimeout(function() {\n                    _runResizeHandlers();\n                }, 50); // wait 50ms until window resize finishes.\n            });\n        }\n    };\n\n    // Handles portlet tools & actions\n    var handlePortletTools = function() {\n        // handle portlet remove\n        $('body').on('click', '.portlet > .portlet-title > .tools > a.remove', function(e) {\n            e.preventDefault();\n            var portlet = $(this).closest(\".portlet\");\n\n            if ($('body').hasClass('page-portlet-fullscreen')) {\n                $('body').removeClass('page-portlet-fullscreen');\n            }\n\n            portlet.find('.portlet-title .fullscreen').tooltip('destroy');\n            portlet.find('.portlet-title > .tools > .reload').tooltip('destroy');\n            portlet.find('.portlet-title > .tools > .remove').tooltip('destroy');\n            portlet.find('.portlet-title > .tools > .config').tooltip('destroy');\n            portlet.find('.portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand').tooltip('destroy');\n\n            portlet.remove();\n        });\n\n        // handle portlet fullscreen\n        $('body').on('click', '.portlet > .portlet-title .fullscreen', function(e) {\n            e.preventDefault();\n            var portlet = $(this).closest(\".portlet\");\n            if (portlet.hasClass('portlet-fullscreen')) {\n                $(this).removeClass('on');\n                portlet.removeClass('portlet-fullscreen');\n                $('body').removeClass('page-portlet-fullscreen');\n                portlet.children('.portlet-body').css('height', 'auto');\n            } else {\n                var height = App.getViewPort().height -\n                    portlet.children('.portlet-title').outerHeight() -\n                    parseInt(portlet.children('.portlet-body').css('padding-top')) -\n                    parseInt(portlet.children('.portlet-body').css('padding-bottom'));\n\n                $(this).addClass('on');\n                portlet.addClass('portlet-fullscreen');\n                $('body').addClass('page-portlet-fullscreen');\n                portlet.children('.portlet-body').css('height', height);\n            }\n        });\n\n        $('body').on('click', '.portlet > .portlet-title > .tools > a.reload', function(e) {\n            e.preventDefault();\n            var el = $(this).closest(\".portlet\").children(\".portlet-body\");\n            var url = $(this).attr(\"data-url\");\n            var error = $(this).attr(\"data-error-display\");\n            if (url) {\n                App.blockUI({\n                    target: el,\n                    animate: true,\n                    overlayColor: 'none'\n                });\n                $.ajax({\n                    type: \"GET\",\n                    cache: false,\n                    url: url,\n                    dataType: \"html\",\n                    success: function(res) {\n                        App.unblockUI(el);\n                        el.html(res);\n                        App.initAjax() // reinitialize elements & plugins for newly loaded content\n                    },\n                    error: function(xhr, ajaxOptions, thrownError) {\n                        App.unblockUI(el);\n                        var msg = 'Error on reloading the content. Please check your connection and try again.';\n                        if (error == \"toastr\" && toastr) {\n                            toastr.error(msg);\n                        } else if (error == \"notific8\" && $.notific8) {\n                            $.notific8('zindex', 11500);\n                            $.notific8(msg, {\n                                theme: 'ruby',\n                                life: 3000\n                            });\n                        } else {\n                            alert(msg);\n                        }\n                    }\n                });\n            } else {\n                // for demo purpose\n                App.blockUI({\n                    target: el,\n                    animate: true,\n                    overlayColor: 'none'\n                });\n                window.setTimeout(function() {\n                    App.unblockUI(el);\n                }, 1000);\n            }\n        });\n\n        // load ajax data on page init\n        $('.portlet .portlet-title a.reload[data-load=\"true\"]').click();\n\n        $('body').on('click', '.portlet > .portlet-title > .tools > .collapse, .portlet .portlet-title > .tools > .expand', function(e) {\n            e.preventDefault();\n            var el = $(this).closest(\".portlet\").children(\".portlet-body\");\n            if ($(this).hasClass(\"collapse\")) {\n                $(this).removeClass(\"collapse\").addClass(\"expand\");\n                el.slideUp(200);\n            } else {\n                $(this).removeClass(\"expand\").addClass(\"collapse\");\n                el.slideDown(200);\n            }\n        });\n    };\n\n    // Handles custom checkboxes & radios using jQuery Uniform plugin\n    var handleUniform = function() {\n        if (!$().uniform) {\n            return;\n        }\n        var test = $(\"input[type=checkbox]:not(.toggle, .md-check, .md-radiobtn, .make-switch, .icheck), input[type=radio]:not(.toggle, .md-check, .md-radiobtn, .star, .make-switch, .icheck)\");\n        if (test.size() > 0) {\n            test.each(function() {\n                if ($(this).parents(\".checker\").size() === 0) {\n                    $(this).show();\n                    $(this).uniform();\n                }\n            });\n        }\n    };\n\n    // Handlesmaterial design checkboxes\n    var handleMaterialDesign = function() {\n\n        // Material design ckeckbox and radio effects\n        $('body').on('click', '.md-checkbox > label, .md-radio > label', function() {\n            var the = $(this);\n            // find the first span which is our circle/bubble\n            var el = $(this).children('span:first-child');\n              \n            // add the bubble class (we do this so it doesnt show on page load)\n            el.addClass('inc');\n              \n            // clone it\n            var newone = el.clone(true);  \n              \n            // add the cloned version before our original\n            el.before(newone);  \n              \n            // remove the original so that it is ready to run on next click\n            $(\".\" + el.attr(\"class\") + \":last\", the).remove();\n        }); \n\n        if ($('body').hasClass('page-md')) { \n            // Material design click effect\n            // credit where credit's due; http://thecodeplayer.com/walkthrough/ripple-click-effect-google-material-design       \n            var element, circle, d, x, y;\n            $('body').on('click', 'a.btn, button.btn, input.btn, label.btn', function(e) { \n                element = $(this);\n      \n                if(element.find(\".md-click-circle\").length == 0) {\n                    element.prepend(\"<span class='md-click-circle'></span>\");\n                }\n                    \n                circle = element.find(\".md-click-circle\");\n                circle.removeClass(\"md-click-animate\");\n                \n                if(!circle.height() && !circle.width()) {\n                    d = Math.max(element.outerWidth(), element.outerHeight());\n                    circle.css({height: d, width: d});\n                }\n                \n                x = e.pageX - element.offset().left - circle.width()/2;\n                y = e.pageY - element.offset().top - circle.height()/2;\n                \n                circle.css({top: y+'px', left: x+'px'}).addClass(\"md-click-animate\");\n\n                setTimeout(function() {\n                    circle.remove();      \n                }, 1000);\n            });\n        }\n\n        // Floating labels\n        var handleInput = function(el) {\n            if (el.val() != \"\") {\n                el.addClass('edited');\n            } else {\n                el.removeClass('edited');\n            }\n        } \n\n        $('body').on('keydown', '.form-md-floating-label .form-control', function(e) { \n            handleInput($(this));\n        });\n        $('body').on('blur', '.form-md-floating-label .form-control', function(e) { \n            handleInput($(this));\n        });        \n\n        $('.form-md-floating-label .form-control').each(function(){\n            if ($(this).val().length > 0) {\n                $(this).addClass('edited');\n            }\n        });\n    }\n\n    // Handles custom checkboxes & radios using jQuery iCheck plugin\n    var handleiCheck = function() {\n        if (!$().iCheck) {\n            return;\n        }\n\n        $('.icheck').each(function() {\n            var checkboxClass = $(this).attr('data-checkbox') ? $(this).attr('data-checkbox') : 'icheckbox_minimal-grey';\n            var radioClass = $(this).attr('data-radio') ? $(this).attr('data-radio') : 'iradio_minimal-grey';\n\n            if (checkboxClass.indexOf('_line') > -1 || radioClass.indexOf('_line') > -1) {\n                $(this).iCheck({\n                    checkboxClass: checkboxClass,\n                    radioClass: radioClass,\n                    insert: '<div class=\"icheck_line-icon\"></div>' + $(this).attr(\"data-label\")\n                });\n            } else {\n                $(this).iCheck({\n                    checkboxClass: checkboxClass,\n                    radioClass: radioClass\n                });\n            }\n        });\n    };\n\n    // Handles Bootstrap switches\n    var handleBootstrapSwitch = function() {\n        if (!$().bootstrapSwitch) {\n            return;\n        }\n        $('.make-switch').bootstrapSwitch();\n    };\n\n    // Handles Bootstrap confirmations\n    var handleBootstrapConfirmation = function() {\n        if (!$().confirmation) {\n            return;\n        }\n        $('[data-toggle=confirmation]').confirmation({ container: 'body', btnOkClass: 'btn btn-sm btn-success', btnCancelClass: 'btn btn-sm btn-danger'});\n    }\n    \n    // Handles Bootstrap Accordions.\n    var handleAccordions = function() {\n        $('body').on('shown.bs.collapse', '.accordion.scrollable', function(e) {\n            App.scrollTo($(e.target));\n        });\n    };\n\n    // Handles Bootstrap Tabs.\n    var handleTabs = function() {\n        //activate tab if tab id provided in the URL\n        if (location.hash) {\n            var tabid = encodeURI(location.hash.substr(1));\n            $('a[href=\"#' + tabid + '\"]').parents('.tab-pane:hidden').each(function() {\n                var tabid = $(this).attr(\"id\");\n                $('a[href=\"#' + tabid + '\"]').click();\n            });\n            $('a[href=\"#' + tabid + '\"]').click();\n        }\n\n        if ($().tabdrop) {\n            $('.tabbable-tabdrop .nav-pills, .tabbable-tabdrop .nav-tabs').tabdrop({\n                text: '<i class=\"fa fa-ellipsis-v\"></i>&nbsp;<i class=\"fa fa-angle-down\"></i>'\n            });\n        }\n    };\n\n    // Handles Bootstrap Modals.\n    var handleModals = function() {        \n        // fix stackable modal issue: when 2 or more modals opened, closing one of modal will remove .modal-open class. \n        $('body').on('hide.bs.modal', function() {\n            if ($('.modal:visible').size() > 1 && $('html').hasClass('modal-open') === false) {\n                $('html').addClass('modal-open');\n            } else if ($('.modal:visible').size() <= 1) {\n                $('html').removeClass('modal-open');\n            }\n        });\n\n        // fix page scrollbars issue\n        $('body').on('show.bs.modal', '.modal', function() {\n            if ($(this).hasClass(\"modal-scroll\")) {\n                $('body').addClass(\"modal-open-noscroll\");\n            }\n        });\n\n        // fix page scrollbars issue\n        $('body').on('hide.bs.modal', '.modal', function() {\n            $('body').removeClass(\"modal-open-noscroll\");\n        });\n\n        // remove ajax content and remove cache on modal closed \n        $('body').on('hidden.bs.modal', '.modal:not(.modal-cached)', function () {\n            $(this).removeData('bs.modal');\n        });\n    };\n\n    // Handles Bootstrap Tooltips.\n    var handleTooltips = function() {\n        // global tooltips\n        $('.tooltips').tooltip();\n\n        // portlet tooltips\n        $('.portlet > .portlet-title .fullscreen').tooltip({\n            container: 'body',\n            title: 'Fullscreen'\n        });\n        $('.portlet > .portlet-title > .tools > .reload').tooltip({\n            container: 'body',\n            title: 'Reload'\n        });\n        $('.portlet > .portlet-title > .tools > .remove').tooltip({\n            container: 'body',\n            title: 'Remove'\n        });\n        $('.portlet > .portlet-title > .tools > .config').tooltip({\n            container: 'body',\n            title: 'Settings'\n        });\n        $('.portlet > .portlet-title > .tools > .collapse, .portlet > .portlet-title > .tools > .expand').tooltip({\n            container: 'body',\n            title: 'Collapse/Expand'\n        });\n    };\n\n    // Handles Bootstrap Dropdowns\n    var handleDropdowns = function() {\n        /*\n          Hold dropdown on click  \n        */\n        $('body').on('click', '.dropdown-menu.hold-on-click', function(e) {\n            e.stopPropagation();\n        });\n    };\n\n    var handleAlerts = function() {\n        $('body').on('click', '[data-close=\"alert\"]', function(e) {\n            $(this).parent('.alert').hide();\n            $(this).closest('.note').hide();\n            e.preventDefault();\n        });\n\n        $('body').on('click', '[data-close=\"note\"]', function(e) {\n            $(this).closest('.note').hide();\n            e.preventDefault();\n        });\n\n        $('body').on('click', '[data-remove=\"note\"]', function(e) {\n            $(this).closest('.note').remove();\n            e.preventDefault();\n        });\n    };\n\n    // Handle Hower Dropdowns\n    var handleDropdownHover = function() {\n        $('[data-hover=\"dropdown\"]').not('.hover-initialized').each(function() {\n            $(this).dropdownHover();\n            $(this).addClass('hover-initialized');\n        });\n    };\n\n    // Handle textarea autosize \n    var handleTextareaAutosize = function() {\n        if (typeof(autosize) == \"function\") {\n            autosize(document.querySelector('textarea.autosizeme'));\n        }\n    }\n\n    // Handles Bootstrap Popovers\n\n    // last popep popover\n    var lastPopedPopover;\n\n    var handlePopovers = function() {\n        $('.popovers').popover();\n\n        // close last displayed popover\n\n        $(document).on('click.bs.popover.data-api', function(e) {\n            if (lastPopedPopover) {\n                lastPopedPopover.popover('hide');\n            }\n        });\n    };\n\n    // Handles scrollable contents using jQuery SlimScroll plugin.\n    var handleScrollers = function() {\n        App.initSlimScroll('.scroller');\n    };\n\n    // Handles Image Preview using jQuery Fancybox plugin\n    var handleFancybox = function() {\n        if (!jQuery.fancybox) {\n            return;\n        }\n\n        if ($(\".fancybox-button\").size() > 0) {\n            $(\".fancybox-button\").fancybox({\n                groupAttr: 'data-rel',\n                prevEffect: 'none',\n                nextEffect: 'none',\n                closeBtn: true,\n                helpers: {\n                    title: {\n                        type: 'inside'\n                    }\n                }\n            });\n        }\n    };\n\n    // Handles counterup plugin wrapper\n    var handleCounterup = function() {\n        if (!$().counterUp) {\n            return;\n        }\n\n        $(\"[data-counter='counterup']\").counterUp({\n            delay: 10,\n            time: 1000\n        });\n    };\n\n    // Fix input placeholder issue for IE8 and IE9\n    var handleFixInputPlaceholderForIE = function() {\n        //fix html5 placeholder attribute for ie7 & ie8\n        if (isIE8 || isIE9) { // ie8 & ie9\n            // this is html5 placeholder fix for inputs, inputs with placeholder-no-fix class will be skipped(e.g: we need this for password fields)\n            $('input[placeholder]:not(.placeholder-no-fix), textarea[placeholder]:not(.placeholder-no-fix)').each(function() {\n                var input = $(this);\n\n                if (input.val() === '' && input.attr(\"placeholder\") !== '') {\n                    input.addClass(\"placeholder\").val(input.attr('placeholder'));\n                }\n\n                input.focus(function() {\n                    if (input.val() == input.attr('placeholder')) {\n                        input.val('');\n                    }\n                });\n\n                input.blur(function() {\n                    if (input.val() === '' || input.val() == input.attr('placeholder')) {\n                        input.val(input.attr('placeholder'));\n                    }\n                });\n            });\n        }\n    };\n\n    // Handle Select2 Dropdowns\n    var handleSelect2 = function() {\n        if ($().select2) {\n            $.fn.select2.defaults.set(\"theme\", \"bootstrap\");\n            $('.select2me').select2({\n                placeholder: \"Select\",\n                width: 'auto', \n                allowClear: true\n            });\n        }\n    };\n\n    // handle group element heights\n   var handleHeight = function() {\n       $('[data-auto-height]').each(function() {\n            var parent = $(this);\n            var items = $('[data-height]', parent);\n            var height = 0;\n            var mode = parent.attr('data-mode');\n            var offset = parseInt(parent.attr('data-offset') ? parent.attr('data-offset') : 0);\n\n            items.each(function() {\n                if ($(this).attr('data-height') == \"height\") {\n                    $(this).css('height', '');\n                } else {\n                    $(this).css('min-height', '');\n                }\n\n                var height_ = (mode == 'base-height' ? $(this).outerHeight() : $(this).outerHeight(true));\n                if (height_ > height) {\n                    height = height_;\n                }\n            });\n\n            height = height + offset;\n\n            items.each(function() {\n                if ($(this).attr('data-height') == \"height\") {\n                    $(this).css('height', height);\n                } else {\n                    $(this).css('min-height', height);\n                }\n            });\n\n            if(parent.attr('data-related')) {\n                $(parent.attr('data-related')).css('height', parent.height());\n            }\n       });       \n    }\n    \n    //* END:CORE HANDLERS *//\n\n    return {\n\n        //main function to initiate the theme\n        init: function() {\n            //IMPORTANT!!!: Do not modify the core handlers call order.\n\n            //Core handlers\n            handleInit(); // initialize core variables\n            handleOnResize(); // set and handle responsive    \n\n            //UI Component handlers     \n            handleMaterialDesign(); // handle material design       \n            handleUniform(); // hanfle custom radio & checkboxes\n            handleiCheck(); // handles custom icheck radio and checkboxes\n            handleBootstrapSwitch(); // handle bootstrap switch plugin\n            handleScrollers(); // handles slim scrolling contents \n            handleFancybox(); // handle fancy box\n            handleSelect2(); // handle custom Select2 dropdowns\n            handlePortletTools(); // handles portlet action bar functionality(refresh, configure, toggle, remove)\n            handleAlerts(); //handle closabled alerts\n            handleDropdowns(); // handle dropdowns\n            handleTabs(); // handle tabs\n            handleTooltips(); // handle bootstrap tooltips\n            handlePopovers(); // handles bootstrap popovers\n            handleAccordions(); //handles accordions \n            handleModals(); // handle modals\n            handleBootstrapConfirmation(); // handle bootstrap confirmations\n            handleTextareaAutosize(); // handle autosize textareas\n            handleCounterup(); // handle counterup instances\n\n            //Handle group element heights\n            this.addResizeHandler(handleHeight); // handle auto calculating height on window resize\n\n            // Hacks\n            handleFixInputPlaceholderForIE(); //IE8 & IE9 input placeholder issue fix\n        },\n\n        //main function to initiate core javascript after ajax complete\n        initAjax: function() {\n            handleUniform(); // handles custom radio & checkboxes     \n            handleiCheck(); // handles custom icheck radio and checkboxes\n            handleBootstrapSwitch(); // handle bootstrap switch plugin\n            handleDropdownHover(); // handles dropdown hover       \n            handleScrollers(); // handles slim scrolling contents \n            handleSelect2(); // handle custom Select2 dropdowns\n            handleFancybox(); // handle fancy box\n            handleDropdowns(); // handle dropdowns\n            handleTooltips(); // handle bootstrap tooltips\n            handlePopovers(); // handles bootstrap popovers\n            handleAccordions(); //handles accordions \n            handleBootstrapConfirmation(); // handle bootstrap confirmations\n        },\n\n        //init main components \n        initComponents: function() {\n            this.initAjax();\n        },\n\n        //public function to remember last opened popover that needs to be closed on click\n        setLastPopedPopover: function(el) {\n            lastPopedPopover = el;\n        },\n\n        //public function to add callback a function which will be called on window resize\n        addResizeHandler: function(func) {\n            resizeHandlers.push(func);\n        },\n\n        //public functon to call _runresizeHandlers\n        runResizeHandlers: function() {\n            _runResizeHandlers();\n        },\n\n        // wrApper function to scroll(focus) to an element\n        scrollTo: function(el, offeset) {\n            var pos = (el && el.size() > 0) ? el.offset().top : 0;\n\n            if (el) {\n                if ($('body').hasClass('page-header-fixed')) {\n                    pos = pos - $('.page-header').height();\n                } else if ($('body').hasClass('page-header-top-fixed')) {\n                    pos = pos - $('.page-header-top').height();\n                } else if ($('body').hasClass('page-header-menu-fixed')) {\n                    pos = pos - $('.page-header-menu').height();\n                }\n                pos = pos + (offeset ? offeset : -1 * el.height());\n            }\n\n            $('html,body').animate({\n                scrollTop: pos\n            }, 'slow');\n        },\n\n        initSlimScroll: function(el) {\n            $(el).each(function() {\n                if ($(this).attr(\"data-initialized\")) {\n                    return; // exit\n                }\n\n                var height;\n\n                if ($(this).attr(\"data-height\")) {\n                    height = $(this).attr(\"data-height\");\n                } else {\n                    height = $(this).css('height');\n                }\n\n                $(this).slimScroll({\n                    allowPageScroll: true, // allow page scroll when the element scroll is ended\n                    size: '7px',\n                    color: ($(this).attr(\"data-handle-color\") ? $(this).attr(\"data-handle-color\") : '#bbb'),\n                    wrapperClass: ($(this).attr(\"data-wrapper-class\") ? $(this).attr(\"data-wrapper-class\") : 'slimScrollDiv'),\n                    railColor: ($(this).attr(\"data-rail-color\") ? $(this).attr(\"data-rail-color\") : '#eaeaea'),\n                    position: isRTL ? 'left' : 'right',\n                    height: height,\n                    alwaysVisible: ($(this).attr(\"data-always-visible\") == \"1\" ? true : false),\n                    railVisible: ($(this).attr(\"data-rail-visible\") == \"1\" ? true : false),\n                    disableFadeOut: true\n                });\n\n                $(this).attr(\"data-initialized\", \"1\");\n            });\n        },\n\n        destroySlimScroll: function(el) {\n            $(el).each(function() {\n                if ($(this).attr(\"data-initialized\") === \"1\") { // destroy existing instance before updating the height\n                    $(this).removeAttr(\"data-initialized\");\n                    $(this).removeAttr(\"style\");\n\n                    var attrList = {};\n\n                    // store the custom attribures so later we will reassign.\n                    if ($(this).attr(\"data-handle-color\")) {\n                        attrList[\"data-handle-color\"] = $(this).attr(\"data-handle-color\");\n                    }\n                    if ($(this).attr(\"data-wrapper-class\")) {\n                        attrList[\"data-wrapper-class\"] = $(this).attr(\"data-wrapper-class\");\n                    }\n                    if ($(this).attr(\"data-rail-color\")) {\n                        attrList[\"data-rail-color\"] = $(this).attr(\"data-rail-color\");\n                    }\n                    if ($(this).attr(\"data-always-visible\")) {\n                        attrList[\"data-always-visible\"] = $(this).attr(\"data-always-visible\");\n                    }\n                    if ($(this).attr(\"data-rail-visible\")) {\n                        attrList[\"data-rail-visible\"] = $(this).attr(\"data-rail-visible\");\n                    }\n\n                    $(this).slimScroll({\n                        wrapperClass: ($(this).attr(\"data-wrapper-class\") ? $(this).attr(\"data-wrapper-class\") : 'slimScrollDiv'),\n                        destroy: true\n                    });\n\n                    var the = $(this);\n\n                    // reassign custom attributes\n                    $.each(attrList, function(key, value) {\n                        the.attr(key, value);\n                    });\n\n                }\n            });\n        },\n\n        // function to scroll to the top\n        scrollTop: function() {\n            App.scrollTo();\n        },\n\n        // wrApper function to  block element(indicate loading)\n        blockUI: function(options) {\n            options = $.extend(true, {}, options);\n            var html = '';\n            if (options.animate) {\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\">' + '<div class=\"block-spinner-bar\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>' + '</div>';\n            } else if (options.iconOnly) {\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\" align=\"\"></div>';\n            } else if (options.textOnly) {\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><span>&nbsp;&nbsp;' + (options.message ? options.message : 'LOADING...') + '</span></div>';\n            } else {\n                html = '<div class=\"loading-message ' + (options.boxed ? 'loading-message-boxed' : '') + '\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\" align=\"\"><span>&nbsp;&nbsp;' + (options.message ? options.message : 'LOADING...') + '</span></div>';\n            }\n\n            if (options.target) { // element blocking\n                var el = $(options.target);\n                if (el.height() <= ($(window).height())) {\n                    options.cenrerY = true;\n                }\n                el.block({\n                    message: html,\n                    baseZ: options.zIndex ? options.zIndex : 1000,\n                    centerY: options.cenrerY !== undefined ? options.cenrerY : false,\n                    css: {\n                        top: '10%',\n                        border: '0',\n                        padding: '0',\n                        backgroundColor: 'none'\n                    },\n                    overlayCSS: {\n                        backgroundColor: options.overlayColor ? options.overlayColor : '#555',\n                        opacity: options.boxed ? 0.05 : 0.1,\n                        cursor: 'wait'\n                    }\n                });\n            } else { // page blocking\n                $.blockUI({\n                    message: html,\n                    baseZ: options.zIndex ? options.zIndex : 1000,\n                    css: {\n                        border: '0',\n                        padding: '0',\n                        backgroundColor: 'none'\n                    },\n                    overlayCSS: {\n                        backgroundColor: options.overlayColor ? options.overlayColor : '#555',\n                        opacity: options.boxed ? 0.05 : 0.1,\n                        cursor: 'wait'\n                    }\n                });\n            }\n        },\n\n        // wrApper function to  un-block element(finish loading)\n        unblockUI: function(target) {\n            if (target) {\n                $(target).unblock({\n                    onUnblock: function() {\n                        $(target).css('position', '');\n                        $(target).css('zoom', '');\n                    }\n                });\n            } else {\n                $.unblockUI();\n            }\n        },\n\n        startPageLoading: function(options) {\n            if (options && options.animate) {\n                $('.page-spinner-bar').remove();\n                $('body').append('<div class=\"page-spinner-bar\"><div class=\"bounce1\"></div><div class=\"bounce2\"></div><div class=\"bounce3\"></div></div>');\n            } else {\n                $('.page-loading').remove();\n                $('body').append('<div class=\"page-loading\"><img src=\"' + this.getGlobalImgPath() + 'loading-spinner-grey.gif\"/>&nbsp;&nbsp;<span>' + (options && options.message ? options.message : 'Loading...') + '</span></div>');\n            }\n        },\n\n        stopPageLoading: function() {\n            $('.page-loading, .page-spinner-bar').remove();\n        },\n\n        alert: function(options) {\n\n            options = $.extend(true, {\n                container: \"\", // alerts parent container(by default placed after the page breadcrumbs)\n                place: \"append\", // \"append\" or \"prepend\" in container \n                type: 'success', // alert's type\n                message: \"\", // alert's message\n                close: true, // make alert closable\n                reset: true, // close all previouse alerts first\n                focus: true, // auto scroll to the alert after shown\n                closeInSeconds: 0, // auto close after defined seconds\n                icon: \"\" // put icon before the message\n            }, options);\n\n            var id = App.getUniqueID(\"App_alert\");\n\n            var html = '<div id=\"' + id + '\" class=\"custom-alerts alert alert-' + options.type + ' fade in\">' + (options.close ? '<button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-hidden=\"true\"></button>' : '') + (options.icon !== \"\" ? '<i class=\"fa-lg fa fa-' + options.icon + '\"></i>  ' : '') + options.message + '</div>';\n\n            if (options.reset) {\n                $('.custom-alerts').remove();\n            }\n\n            if (!options.container) {\n                if ($('.page-fixed-main-content').size() === 1) {\n                    $('.page-fixed-main-content').prepend(html);\n                } else if (($('body').hasClass(\"page-container-bg-solid\") || $('body').hasClass(\"page-content-white\")) && $('.page-head').size() === 0) {\n                    $('.page-title').after(html);\n                } else {\n                    if ($('.page-bar').size() > 0) {\n                        $('.page-bar').after(html);\n                    } else {\n                        $('.page-breadcrumb, .breadcrumbs').after(html);\n                    }\n                }\n            } else {\n                if (options.place == \"append\") {\n                    $(options.container).append(html);\n                } else {\n                    $(options.container).prepend(html);\n                }\n            }\n\n            if (options.focus) {\n                App.scrollTo($('#' + id));\n            }\n\n            if (options.closeInSeconds > 0) {\n                setTimeout(function() {\n                    $('#' + id).remove();\n                }, options.closeInSeconds * 1000);\n            }\n\n            return id;\n        },\n\n        // initializes uniform elements\n        initUniform: function(els) {\n            if (els) {\n                $(els).each(function() {\n                    if ($(this).parents(\".checker\").size() === 0) {\n                        $(this).show();\n                        $(this).uniform();\n                    }\n                });\n            } else {\n                handleUniform();\n            }\n        },\n\n        //wrApper function to update/sync jquery uniform checkbox & radios\n        updateUniform: function(els) {\n            $.uniform.update(els); // update the uniform checkbox & radios UI after the actual input control state changed\n        },\n\n        //public function to initialize the fancybox plugin\n        initFancybox: function() {\n            handleFancybox();\n        },\n\n        //public helper function to get actual input value(used in IE9 and IE8 due to placeholder attribute not supported)\n        getActualVal: function(el) {\n            el = $(el);\n            if (el.val() === el.attr(\"placeholder\")) {\n                return \"\";\n            }\n            return el.val();\n        },\n\n        //public function to get a paremeter by name from URL\n        getURLParameter: function(paramName) {\n            var searchString = window.location.search.substring(1),\n                i, val, params = searchString.split(\"&\");\n\n            for (i = 0; i < params.length; i++) {\n                val = params[i].split(\"=\");\n                if (val[0] == paramName) {\n                    return unescape(val[1]);\n                }\n            }\n            return null;\n        },\n\n        // check for device touch support\n        isTouchDevice: function() {\n            try {\n                document.createEvent(\"TouchEvent\");\n                return true;\n            } catch (e) {\n                return false;\n            }\n        },\n\n        // To get the correct viewport width based on  http://andylangton.co.uk/articles/javascript/get-viewport-size-javascript/\n        getViewPort: function() {\n            var e = window,\n                a = 'inner';\n            if (!('innerWidth' in window)) {\n                a = 'client';\n                e = document.documentElement || document.body;\n            }\n\n            return {\n                width: e[a + 'Width'],\n                height: e[a + 'Height']\n            };\n        },\n\n        getUniqueID: function(prefix) {\n            return 'prefix_' + Math.floor(Math.random() * (new Date()).getTime());\n        },\n\n        // check IE8 mode\n        isIE8: function() {\n            return isIE8;\n        },\n\n        // check IE9 mode\n        isIE9: function() {\n            return isIE9;\n        },\n\n        //check RTL mode\n        isRTL: function() {\n            return isRTL;\n        },\n\n        // check IE8 mode\n        isAngularJsApp: function() {\n            return (typeof angular == 'undefined') ? false : true;\n        },\n\n        getAssetsPath: function() {\n            return assetsPath;\n        },\n\n        setAssetsPath: function(path) {\n            assetsPath = path;\n        },\n\n        setGlobalImgPath: function(path) {\n            globalImgPath = path;\n        },\n\n        getGlobalImgPath: function() {\n            return assetsPath + globalImgPath;\n        },\n\n        setGlobalPluginsPath: function(path) {\n            globalPluginsPath = path;\n        },\n\n        getGlobalPluginsPath: function() {\n            return assetsPath + globalPluginsPath;\n        },\n\n        getGlobalCssPath: function() {\n            return assetsPath + globalCssPath;\n        },\n\n        // get layout color code by color name\n        getBrandColor: function(name) {\n            if (brandColors[name]) {\n                return brandColors[name];\n            } else {\n                return '';\n            }\n        },\n\n        getResponsiveBreakpoint: function(size) {\n            // bootstrap responsive breakpoints\n            var sizes = {\n                'xs' : 480,     // extra small\n                'sm' : 768,     // small\n                'md' : 992,     // medium\n                'lg' : 1200     // large\n            };\n\n            return sizes[size] ? sizes[size] : 0; \n        }\n    };\n\n}();\n\njQuery(document).ready(function() {    \n   App.init(); // init metronic core componets\n});"]}